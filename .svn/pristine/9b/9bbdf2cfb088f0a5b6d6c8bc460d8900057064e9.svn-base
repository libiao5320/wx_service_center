package com.royao.ctrl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.royao.http.RequestContent;
import com.royao.http.RequestHandler;
import com.royao.http.ResponseContent;
import com.royao.http.ResponseHandler;
import com.royao.model.Dconsumption;
import com.royao.model.Dgoods;
import com.royao.model.base.PageObject;
import com.royao.services.inface.DconsumptionService;
import com.royao.services.inface.DgoodsService;
import com.royao.util.DateUtil;
import com.royao.util.JsonUtil;


@Controller
@RequestMapping("/consumption")
public class DconsumptionCtrl {
		
			
		@Autowired
		private DconsumptionService  ptionService;
		
		@Autowired
		private DgoodsService  goodsService;
		
		/**
		 * @return
		 */
		/**
		 * @param request
		 * @return
		 */
		@ResponseBody
		@RequestMapping("/list.htm")
		public String list(HttpServletRequest request,HttpServletResponse response){
			List<Map<String,Object>>  result = new ArrayList<Map<String,Object>>();
			ResponseContent responseContent = new ResponseContent();
	        RequestContent requestContent = RequestHandler.execute(request);
			
	        Map<?, ?> params = requestContent.getBody();
	        PageObject pageObject = new PageObject();
	        if(null != params && params.size()>0){
	        	String page = params.get("page").toString();
	        	pageObject.setPageNo(Integer.parseInt(page));
	        	params.remove("page");
	        	pageObject.setPageSize(10);
	        	Dconsumption t = JSON.parseObject(JsonUtil.map2json(params), Dconsumption.class);
	        	t.setPageInfo(pageObject);
	        	
	        	List<Dconsumption> ption = this.ptionService.getByGoodsvalidityTime(t);
	        	for (Dconsumption dconsumption : ption) {
					Map<String,Object> map = new HashMap<String, Object>();
					map.put("tion_time",dconsumption.getValidityTime());
					map.put("goodsId", dconsumption.getGoodsId());
					try {
						Dgoods  goods = this.goodsService.queryById(dconsumption.getGoodsId());
						map.put("goods_name", goods.getGoodsName());
						map.put("goods_img", goods.getGoodsImage());
					} catch (Exception e) {
						e.printStackTrace();
					}
					result.add(map);
				}
	        	try {
					responseContent = ResponseHandler.makeResponse(result, true);
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
			return JSONObject.toJSONString(responseContent);
		}
		
		
		@ResponseBody
		@RequestMapping("/detail.htm")
		public String detail(HttpServletRequest request,HttpServletResponse response){
			List<Map<String,Object>>  result = new ArrayList<Map<String,Object>>();
			ResponseContent responseContent = new ResponseContent();
	        RequestContent requestContent = RequestHandler.execute(request);
	        
	        Map<?, ?> params = requestContent.getBody();
	        
	        PageObject pageObject = new PageObject();
	        if(null != params && params.size()>0){
	        	String page = params.get("page").toString();
	        	pageObject.setPageNo(Integer.parseInt(page));
	        	params.remove("page");
	        	pageObject.setPageSize(10);
	        	
	        	Dconsumption t = JSON.parseObject(JsonUtil.map2json(params), Dconsumption.class);
	        	t.setPageInfo(pageObject);
	        	
	        	List<Dconsumption> t_list = this.ptionService.queryByCondition_s(t);
	        	
	        	for (Dconsumption dconsumption : t_list) {
					Map<String,Object> map = new HashMap<String, Object>();
					map.put("no", dconsumption.getCode());
					map.put("tion_time", DateUtil.formatDates(dconsumption.getValidityTime()));
					map.put("id", dconsumption.getId());
					try {
						Dgoods  goods = this.goodsService.queryById(dconsumption.getGoodsId());
						map.put("goods_name", goods.getGoodsName());
						map.put("goods_img", goods.getGoodsImage());
					} catch (Exception e) {
						e.printStackTrace();
					}
					result.add(map);
				}
	        	try {
					responseContent = ResponseHandler.makeResponse(result, true);
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	        return JSONObject.toJSONString(responseContent);
		}
}
