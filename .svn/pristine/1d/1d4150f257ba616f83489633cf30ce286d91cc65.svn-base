package com.royao.ctrl;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.royao.http.*;
import com.royao.model.*;
import com.royao.model.base.PageObject;
import com.royao.services.inface.*;
import com.royao.util.JsonUtil;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by libia on 2015/12/31.
 */


@Controller
@RequestMapping("/index")
public class Index {


    @Autowired
    private DwxBannerService dwxBannerService;
    @Autowired
    private DeventImageService deventImageService;
    @Autowired
    private DgoodsService dgoodsService;


    @ResponseBody
    @RequestMapping(value = "/index.htm")
    public String test(HttpServletRequest request, HttpServletResponse response) {

        ResponseContent responseContent = new ResponseContent();
        RequestContent requestContent = RequestHandler.execute(request);
        Map<?, ?> params = requestContent.getBody();


        Darea darea = null;
        try {
            List<DwxBanner> bannerlist = dwxBannerService.queryHomeBanner();
            List<DeventImage> eventImgList = deventImageService.queryHomeEventImgage();
            List<Dgoods> guessLoveGoods = dgoodsService.getBestEvalGoods();

            Map m = new HashMap();
            m.put("bannerlist", bannerlist);
            m.put("eventImgList", eventImgList);
            m.put("guessLoveGoods", guessLoveGoods);
            responseContent = ResponseHandler.makeResponse(m, true);

        } catch (Exception e) {
            e.printStackTrace();
        }

        return JSONObject.toJSONString(responseContent);
    }


    @ResponseBody
    @RequestMapping(value = "/search.htm")
    public String search(HttpServletRequest request, HttpServletResponse response) {

        ResponseContent responseContent = new ResponseContent();
        RequestContent requestContent = RequestHandler.execute(request);


        Map<?, ?> params = requestContent.getBody();
        if (null == params) {
            Dgoods dgoods = JSONObject.parseObject(JsonUtil.map2json(params), Dgoods.class);
            List list = dgoodsService.search(dgoods);

            response.setCharacterEncoding("utf-8");

            try {
                if (null != list)
                    responseContent = ResponseHandler.makeResponse(list, true);
                else
                    return null;

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else
            return null;

        return JSONObject.toJSONString(responseContent);
    }


    @ResponseBody
    @RequestMapping(value = "/memberInfo.htm")
    public String memberInfo(HttpServletRequest request, HttpServletResponse response) {
        ResponseContent responseContent = new ResponseContent();
        RequestContent requestContent = RequestHandler.execute(request);


        Map<?, ?> params = requestContent.getBody();
        if (null == params) {
            Dgoods dgoods = JSONObject.parseObject(JsonUtil.map2json(params), Dgoods.class);
            List list = dgoodsService.search(dgoods);

            response.setCharacterEncoding("utf-8");

            try {
                if (null != list)
                    responseContent = ResponseHandler.makeResponse(list, true);
                else
                    return null;

            } catch (Exception e) {
                e.printStackTrace();
            }
        } else
            return null;


        return JSONObject.toJSONString(responseContent);
    }

}
