package com.royao.pctrl.event;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.royao.http.RequestContent;
import com.royao.http.RequestHandler;
import com.royao.http.ResponseContent;
import com.royao.http.ResponseHandler;
import com.royao.model.Devent;
import com.royao.model.base.PageObject;
import com.royao.services.inface.DeventService;
import com.royao.util.JsonUtil;

@Controller
@RequestMapping("/event/manager")
public class EventManagerCtrl {

	Logger logger = Logger.getLogger(this.getClass());
	
    @Autowired
    private DeventService eventService;

    /**
     * @param @return
     * @return String
     * @throws
     * @Description:条件查询商家活动
     * @author Liu Li
     * @date 2016年1月21日
     */
    @ResponseBody
    @RequestMapping("/query.htm")
    public String query(HttpServletRequest request, HttpServletResponse response) {

        ResponseContent responseContent = new ResponseContent();
        RequestContent requestContent = RequestHandler.execute(request);
        Map<?, ?> params = requestContent.getBody();


        response.setCharacterEncoding("utf-8");

        Devent paramEvent = JSON.parseObject(JsonUtil.map2json(params), Devent.class);
        PageObject pageInfo = new PageObject();

        try {
        	
        	if(null != requestContent.getBody()){
        		if(StringUtils.isNotBlank(requestContent.getBody().get("pageNo"))){
        			pageInfo.setPageNo(Integer.parseInt(requestContent.getBody().get("pageNo")));
        		}else{
        			pageInfo.setPageNo(1);
        		}
        		
        	}else{
        		pageInfo.setPageNo(1);
        	}
        	
        	paramEvent.setPageInfo(pageInfo);
            List<Devent> list = this.eventService.listWithPageAndConditionManager(paramEvent);
            
            long total = this.eventService.countWithPageAndConditionManager(paramEvent);
            Map<String,Object> returnMap = new HashMap<String, Object>();
            returnMap.put("rows", list);
            returnMap.put("total", total);
            
            if (list != null && list.size() > 0) {
                responseContent = ResponseHandler.makeResponse(returnMap, true);
            } 
        } catch (Exception e) {
            logger.info("ajax请求活动列表失败", e);
        }

        return JSONObject.toJSONString(responseContent);
    }
}
