<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.royao.mapper.DbalanceLogsMapper">

    <resultMap id="RMDbalanceLogs" type="com.royao.model.DbalanceLogs">
        <result property="id" column="id"/>
        <result property="memberId" column="member_id"/>
        <result property="sn" column="sn"/>
        <result property="amount" column="amount"/>
        <result property="balance" column="balance"/>
        <result property="explain" column="explain"/>
        <result property="method" column="method"/>
        <result property="state" column="state"/>
        <result property="currentBalance" column="current_balance"/>
        <result property="tradeNo" column="trade_no"/>
        <result property="addTime" column="add_time"/>
        <result property="addBy" column="add_by"/>
        <result property="greade" column="greade"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[
		id,member_id,`sn`,`amount`,`balance`,`explain`,`method`,`state`,current_balance,trade_no,add_time,add_by,`greade`
	    ]]>
    </sql>
    
    <!-- 统计储值金额 -->
	<select id="countStored" resultType="java.lang.Long">
		select count(`amount`) from d_balance_logs where `method` IN ('WXPAY','CARD')
	</select>
	
    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        INSERT INTO d_balance_logs (
        	id ,
        	member_id ,
        	`sn` ,
        	`amount` ,
        	`balance` ,
        	`explain` ,
        	`method` ,
        	`state` ,
        	current_balance ,
        	trade_no ,
        	add_time ,
        	add_by,
        	`greade` 
        ) VALUES (
        	#{id} ,
        	#{memberId} ,
        	#{sn} ,
        	#{amount} ,
        	#{balance} ,
        	#{explain} ,
        	#{method} ,
        	#{state} ,
        	#{currentBalance} ,
        	#{tradeNo} ,
        	now() ,
        	#{addBy} ,
        	#{greade}
        )
    ]]>
        <!--
            oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL
            DB2: order="BEFORE"" values nextval for sequenceName
        <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
            SELECT sequenceName.nextval AS ID FROM DUAL
        </selectKey>
        -->
    </insert>

    <update id="update">
        <![CDATA[
        UPDATE d_balance_logs SET
	        member_id = #{memberId} ,
	        sn = #{sn} ,
	        `amount` = #{amount} ,
	        `balance` = #{balance} ,
	        `explain` = #{explain} ,
	        `method` = #{method} ,
	        `state` = #{state} ,
	        current_balance = #{currentBalance} ,
	        trade_no = #{tradeNo} ,
	        add_time = #{addTime} ,
	        add_by = #{addBy} ,
	        `greade` = #{greade},
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
        <![CDATA[
        DELETE FROM d_balance_logs WHERE
        id = #{id} 
    ]]>
    </delete>

    <select id="queryById" resultMap="RMDbalanceLogs">
        SELECT
        <include refid="columns"/>
        <![CDATA[
		    FROM d_balance_logs 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>


    <select id="listWithPageCount" resultType="long">
        SELECT count(*) FROM d_balance_logs where 1=1

    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="listWithPage" resultType="java.util.HashMap">
        SELECT
        <include refid="columns"/>
        FROM d_balance_logs
        where 1=1
        limit #begin# , #end#
    </select>
	<select id="queryUserByBalanceList" resultType="java.util.HashMap" parameterType="com.royao.model.DbalanceLogs">
		select * from d_balance_logs where member_id=#{memberId} and `state` =#{state} order by add_time DESC  limit #{pageInfo.begin} , #{pageInfo.end}
	</select>

    <select id="queryAll" resultMap="RMDbalanceLogs">
        SELECT
        <include refid="columns"/>
        FROM d_balance_logs 
    </select>

<!--更加商户订单号查询记录  -->
	<select id="querySn" resultMap="RMDbalanceLogs">
		 SELECT
        <include refid="columns"/>
        FROM d_balance_logs where sn = #{sn}
	</select>


    <select id="queryByCondition" resultMap="RMDbalanceLogs">
        SELECT
        <include refid="columns"/>
        FROM d_balance_logs

        <where>
            <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id}
            </if>
            <if test="@Ognl@isNotEmpty(memberId)">
                AND member_id = #{memberId}
            </if>
            <if test="@Ognl@isNotEmpty(sn)">
                AND sn = #{sn}
            </if>
            <if test="@Ognl@isNotEmpty(amount)">
                AND amount = #{amount}
            </if>
            <if test="@Ognl@isNotEmpty(balance)">
                AND balance = #{balance}
            </if>
            <if test="@Ognl@isNotEmpty(explain)">
                AND explain = #{explain}
            </if>
            <if test="@Ognl@isNotEmpty(method)">
                AND method = #{method}
            </if>
            <if test="@Ognl@isNotEmpty(state)">
                AND state = #{state}
            </if>
            <if test="@Ognl@isNotEmpty(currentBalance)">
                AND current_balance = #{currentBalance}
            </if>
            <if test="@Ognl@isNotEmpty(tradeNo)">
                AND trade_no = #{tradeNo}
            </if>
            <if test="@Ognl@isNotEmpty(addTimeBegin)">
                AND add_time >= #{addTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(addTimeEnd)">
                AND add_time &lt;= #{addTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(addBy)">
                AND add_by = #{addBy}
            </if>
        </where>
    </select>

	<!--  -->
	<select id="queryGroup" resultMap="RMDbalanceLogs" parameterType="com.royao.model.Order">
			select sum(amount) as amount from d_balance_logs b
			<where>
				<if test="typeName !=null and typeName !=''">
					<if test="typeValue != null and typeValue !=''">
						<if test="typeName =='userName'">
							and member_id in (select member_id from d_member where member_name like CONCAT(CONCAT('%',#{typeValue}),'%))
						</if>
						<if test="typeName =='phone'">
							and member_id in (select member_id from d_member where member_mobile like CONCAT(CONCAT('%',#{typeValue}),'%'))
						</if>
						<if test="typeName == 'id'">
							and member_id like CONCAT(CONCAT('%',#{typeValue}),'%')
						</if>
					</if>
				</if>
				<if test="startTime != null">
					and add_time <![CDATA[>=]]> #{startTime}
				</if>
				<if test="endTime != null">
					and add_time <![CDATA[<=]]> #{endTime}
				</if>
			</where>
			
	</select>
	<!--  -->
</mapper>

