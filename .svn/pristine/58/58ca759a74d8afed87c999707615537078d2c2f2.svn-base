package com.royao.ctrl;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.royao.http.RequestContent;
import com.royao.http.RequestHandler;
import com.royao.http.ResponseContent;
import com.royao.http.ResponseHandler;
import com.royao.model.Devent;
import com.royao.model.base.PageObject;
import com.royao.services.inface.DeventService;
import com.royao.util.JsonUtil;

@Controller
@RequestMapping("/event")
public class EventCenterCtrl {

    @Autowired
    private DeventService eventService;

    /**
     * @param @return
     * @return String
     * @throws
     * @Description:查看所有商家活动
     * @author Liu Pinghui
     * @date 2016年1月4日
     */
    @ResponseBody
    @RequestMapping("/list.htm")
    public String index(HttpServletRequest request, HttpServletResponse response) {

        try {

            ResponseContent responseContent = new ResponseContent();
            RequestContent requestContent = RequestHandler.execute(request);
            Map<?, ?> params = requestContent.getBody();


            response.setCharacterEncoding("utf-8");

            Devent paramEvent = JSON.parseObject(JsonUtil.map2json(params), Devent.class);
            PageObject pageInfo = new PageObject();
            pageInfo.setPageNo(1);
            paramEvent.setPageInfo(pageInfo);

            try {
                List<Devent> list = this.eventService.listWithPage(paramEvent);
                if (list != null && list.size() > 0) {
                    responseContent = ResponseHandler.makeResponse(JSONArray.parseArray(JSONArray.toJSONString(list)), true);
                } else {
                    return null;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            return JSONObject.toJSONString(responseContent);
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        return null;
    }

    @ResponseBody
    @RequestMapping("/detail.htm")
    public String detail(HttpServletRequest request, HttpServletResponse response) {
        ResponseContent responseContent = new ResponseContent();
        RequestContent requestContent = RequestHandler.execute(request);
        try {
            if (null != requestContent.getBody()) {
                Devent devent = this.eventService.queryById(Long.parseLong(requestContent.getBody().get("id").toString()));
                if (devent != null) {
                    responseContent = ResponseHandler.makeResponse(devent, true);
                } else {
                    return null;
                }
            }
            return JSONObject.toJSONString(responseContent);
        } catch (Exception e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        return null;
    }
}
