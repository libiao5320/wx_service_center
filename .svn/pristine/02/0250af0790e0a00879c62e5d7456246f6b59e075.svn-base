<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.royao.mapper.DtempleteMapper">

	<resultMap id="RMDtemplete" type="com.royao.model.Dtemplete">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="outline" column="outline"/>
        <result property="type" column="type"/>
        <result property="text" column="text"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		id,name,outline,type,text
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO d_templete (
        	id ,
        	name ,
        	outline ,
        	type ,
        	text 
        ) VALUES (
        	#{id} ,
        	#{name} ,
        	#{outline} ,
        	#{type} ,
        	#{text} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE d_templete SET
	        name = #{name} ,
	        outline = #{outline} ,
	        type = #{type} ,
	        text = #{text} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM d_templete WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="queryById" resultMap="RMDtemplete">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM d_templete 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	

		
    <select id="listWithPageCount" resultType="long">
        SELECT count(*) FROM d_templete where 1=1

    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="listWithPage" resultType="java.util.HashMap">
    	SELECT <include refid="columns" />
	    FROM d_templete 
		where 1=1 
		limit #begin# , #end#
    </select>
	
	
	
	  <select id="queryAll" resultMap="RMDtemplete">
    	SELECT <include refid="columns" />
	    FROM d_templete 
	  </select>
	  
	    <select id="queryByCondition" resultMap="RMDtemplete">
    	SELECT <include refid="columns" />
	    FROM d_templete 
		
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(name)">
				AND name = #{name}
			</if>
	       <if test="@Ognl@isNotEmpty(outline)">
				AND outline = #{outline}
			</if>
	       <if test="@Ognl@isNotEmpty(type)">
				AND type = #{type}
			</if>
	       <if test="@Ognl@isNotEmpty(text)">
				AND text = #{text}
			</if>
		</where>
	  </select>

	
</mapper>

