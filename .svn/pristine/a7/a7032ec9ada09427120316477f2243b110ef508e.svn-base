<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.royao.mapper.DtechieGoodsMapper">

	<resultMap id="RMDtechieGoods" type="com.royao.model.DtechieGoods">
        <result property="id" column="id"/>
        <result property="techieId" column="techie_id"/>
        <result property="goodsId" column="goods_id"/>
        <result property="sort" column="sort"/>
        <result property="isCommend" column="is_commend"/>
	</resultMap>
	
	<resultMap type="com.royao.model.DtechieGoods" extends="RMDtechieGoods" id="RMDtechieGoodsDetail">
			    <association property="dtechie" column="techie_id" select="com.royao.mapper.DtechieMapper.queryById"></association>
    </resultMap>

	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="DtechieGoodscolumns">
	    <![CDATA[
		id,techie_id,goods_id,sort,is_commend
	    ]]>
	</sql>
	
   <select id="queryByGoodsIdList" resultMap="RMDtechieGoodsDetail">
		SELECT <include refid="DtechieGoodscolumns" />
	    <![CDATA[
		    FROM d_techie_goods 
	        WHERE 
		        goods_id = #{goods_id} 
	    ]]>
	</select>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO d_techie_goods (
        	id ,
        	techie_id ,
        	goods_id ,
        	sort ,
        	is_commend 
        ) VALUES (
        	#{id} ,
        	#{techieId} ,
        	#{goodsId} ,
        	#{sort} ,
        	#{isCommend} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE d_techie_goods SET
	        techie_id = #{techieId} ,
	        goods_id = #{goodsId} ,
	        sort = #{sort} ,
	        is_commend = #{isCommend} 
        WHERE 
	        id = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM d_techie_goods WHERE
        id = #{id} 
    ]]>
    </delete>
    
    <select id="queryById" resultMap="RMDtechieGoods">
		SELECT <include refid="DtechieGoodscolumns" />
	    <![CDATA[
		    FROM d_techie_goods 
	        WHERE 
		        id = #{id} 
	    ]]>
	</select>
	

		
    <select id="listWithPageCount" resultType="long">
        SELECT count(*) FROM d_techie_goods where 1=1

    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="listWithPage" resultType="java.util.HashMap">
    	SELECT <include refid="DtechieGoodscolumns" />
	    FROM d_techie_goods 
		where 1=1 
		limit #begin# , #end#
    </select>
	
	
	
	  <select id="queryAll" resultMap="RMDtechieGoods">
    	SELECT <include refid="DtechieGoodscolumns" />
	    FROM d_techie_goods 
	  </select>
	  
	    <select id="queryByCondition" resultMap="RMDtechieGoods">
    	SELECT <include refid="DtechieGoodscolumns" />
	    FROM d_techie_goods 
		
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND id = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(techieId)">
				AND techie_id = #{techieId}
			</if>
	       <if test="@Ognl@isNotEmpty(goodsId)">
				AND goods_id = #{goodsId}
			</if>
	       <if test="@Ognl@isNotEmpty(sort)">
				AND sort = #{sort}
			</if>
	       <if test="@Ognl@isNotEmpty(isCommend)">
				AND is_commend = #{isCommend}
			</if>
		</where>
	  </select>

	
</mapper>

