/*
 * Powered By [rapid-framework]
 * Web Site: http://www.rapid-framework.org.cn
 * Google Code: http://code.google.com/p/rapid-framework/
 * Since 2008 - 2015
 */


package com.royao.services.impl;


import com.royao.mapper.DrechargeCardMapper;
import com.royao.model.DrechargeCard;
import com.royao.services.base.impl.BaseServiceImpl;
import com.royao.services.inface.DrechargeCardService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Map;


@Service("rechargeCardService")
public class DrechargeCardServiceImpl extends BaseServiceImpl<DrechargeCard> implements DrechargeCardService {

    @Autowired
    private DrechargeCardMapper drechargeCardMapper;


    public int save(DrechargeCard drechargeCard) throws Exception {
        return drechargeCardMapper.save(drechargeCard);
    }

    public int update(DrechargeCard drechargeCard) throws Exception {
        return drechargeCardMapper.update(drechargeCard);
    }

    public int delete(Long id) throws Exception {
        return drechargeCardMapper.delete(id);
    }

    public DrechargeCard queryById(Long id) throws Exception {
        return drechargeCardMapper.queryById(id);
    }

    @SuppressWarnings("rawtypes")
	public List<DrechargeCard> queryByCondtion(Map map) throws Exception {
        return drechargeCardMapper.queryByCondtion(map);
    }

    public List<DrechargeCard> queryAll() throws Exception {
        return drechargeCardMapper.queryAll();
    }

    public List<DrechargeCard> listWithPage(DrechargeCard t)
            throws Exception {
        return null;
    }

	public DrechargeCard queryCard(String cardPassword) {
		return this.drechargeCardMapper.queryCard(cardPassword);
	}

	public List<DrechargeCard> listWithPageAndCondition(Map params) {
		return drechargeCardMapper.listWithPageAndCondition(params);
	}

	public int countWithCondition(Map params) {
		return drechargeCardMapper.countWithCondition(params);
	}

	public int getCountByRechargeSn(String rechargeSn) {
		return drechargeCardMapper.getCountByRechargeSn(rechargeSn);
	}


}