<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.royao.mapper.DtopmanMapper">

    <resultMap id="RMDtopman" type="com.royao.model.Dtopman">
        <result property="id" column="id"/>
        <result property="memberId" column="member_id"/>

        <result property="industry" column="industry"/>
        <result property="job" column="job"/>
        <result property="ifMeadia" column="if_meadia"/>
        <result property="ifHaveMediaRes" column="if_have_media_res"/>
        <result property="ifSpecial" column="if_special"/>
        <result property="ifHavePubRes" column="if_have_pub_res"/>
        <result property="reason" column="reason"/>
        <result property="status" column="status"/>

        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[
		id,member_id,reason,status,remark,create_time,industry,job,if_meadia,if_have_media_res,if_special,if_have_pub_res
	    ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        INSERT INTO d_topman (
        	id ,
        	member_id ,
        	reason ,
        	status ,
        	remark ,
        	create_time ,
        	industry,
        	job,
        	if_meadia,
        	if_have_media_res,
        	if_special,
        	if_have_pub_res
        ) VALUES (
        	#{id} ,
        	#{memberId} ,
        	#{reason} ,
        	#{status} ,
        	#{remark} ,
        	#{createTime}
        	 ,
        	#{industry} ,
        	#{job}
        	 ,
        	#{ifMeadia} ,
        	#{ifHaveMediaRes}
        	 ,
        	#{ifSpecial} ,
        	#{ifHavePubRes}
        )
    ]]>
        <!--
            oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL
            DB2: order="BEFORE"" values nextval for sequenceName
        <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
            SELECT sequenceName.nextval AS ID FROM DUAL
        </selectKey>
        -->
    </insert>

    <update id="update">
        <![CDATA[
        UPDATE d_topman SET
	        member_id = #{memberId} ,
	        reason = #{reason} ,
	        status = #{status} ,
	        remark = #{remark} ,
	        create_time = #{createTime} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
        <![CDATA[
        DELETE FROM d_topman WHERE
        id = #{id} 
    ]]>
    </delete>

    <select id="queryById" resultMap="RMDtopman">
        SELECT
        <include refid="columns"/>
        <![CDATA[
		    FROM d_topman 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>


    <select id="listWithPageCount" resultType="long">
        SELECT count(*) FROM d_topman where 1=1

    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="listWithPage" resultType="java.util.HashMap">
        SELECT
        <include refid="columns"/>
        FROM d_topman
        where 1=1
        limit #begin# , #end#
    </select>


    <select id="queryAll" resultMap="RMDtopman">
        SELECT
        <include refid="columns"/>
        FROM d_topman
    </select>

    <select id="queryByCondition" resultMap="RMDtopman">
        SELECT
        <include refid="columns"/>
        FROM d_topman

        <where>
            <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id}
            </if>
            <if test="@Ognl@isNotEmpty(memberId)">
                AND member_id = #{memberId}
            </if>
            <if test="@Ognl@isNotEmpty(reason)">
                AND reason = #{reason}
            </if>
            <if test="@Ognl@isNotEmpty(status)">
                AND status = #{status}
            </if>
            <if test="@Ognl@isNotEmpty(remark)">
                AND remark = #{remark}
            </if>
            <if test="@Ognl@isNotEmpty(createTimeBegin)">
                AND create_time >= #{createTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(createTimeEnd)">
                AND create_time &lt;= #{createTimeEnd}
            </if>
        </where>
    </select>


</mapper>

