<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.royao.mapper.DcomplainMapper">

    <resultMap id="RMDcomplain" type="com.royao.model.Dcomplain">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="memberId" column="member_id"/>
        <result property="reason" column="reason"/>
        <result property="status" column="status"/>
        <result property="reply" column="reply"/>
        <result property="handle" column="handle"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateBy" column="update_by"/>
    </resultMap>
    
    <!-- 返回包含订单对象的投诉对象 -->
    <resultMap id="RMDcomplainDorder" type="com.royao.model.Dcomplain" extends="RMDcomplain">
        <association property="order" column="order_id" select="com.royao.mapper.DorderMapper.queryById"></association>
    </resultMap>
    

    <!-- 用于select查询公用抽取的列 -->
    <sql id="columns">
        <![CDATA[
		id,order_id,member_id,reason,status,reply,handle,remark,create_time,update_time,update_by
	    ]]>
    </sql>

    <!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        INSERT INTO d_complain (
        	id ,
        	order_id ,
        	member_id ,
        	reason ,
        	status ,
        	reply ,
        	handle ,
        	remark ,
        	create_time ,
        	update_time ,
        	update_by 
        ) VALUES (
        	#{id} ,
        	#{orderId} ,
        	#{memberId} ,
        	#{reason} ,
        	#{status} ,
        	#{reply} ,
        	#{handle} ,
        	#{remark} ,
        	#{createTime} ,
        	#{updateTime} ,
        	#{updateBy} 
        )
    ]]>
        <!--
            oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL
            DB2: order="BEFORE"" values nextval for sequenceName
        <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
            SELECT sequenceName.nextval AS ID FROM DUAL
        </selectKey>
        -->
    </insert>

    <update id="update">
        <![CDATA[
        UPDATE d_complain SET
	        order_id = #{orderId} ,
	        member_id = #{memberId} ,
	        reason = #{reason} ,
	        status = #{status} ,
	        reply = #{reply} ,
	        handle = #{handle} ,
	        remark = #{remark} ,
	        create_time = #{createTime} ,
	        update_time = #{updateTime} ,
	        update_by = #{updateBy} 
        WHERE 
	        id = #{id} 
    ]]>
    </update>

    <delete id="delete">
        <![CDATA[
        DELETE FROM d_complain WHERE
        id = #{id} 
    ]]>
    </delete>

    <select id="queryById" resultMap="RMDcomplain">
        SELECT
        <include refid="columns"/>
        <![CDATA[
		    FROM d_complain 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>


    <select id="listWithPageCount" resultType="long">
        SELECT count(*) FROM d_complain where 1=1

    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="listWithPage" resultType="java.util.HashMap">
        SELECT
        <include refid="columns"/>
        FROM d_complain
        where 1=1
        limit #begin# , #end#
    </select>


    <select id="queryAll" resultMap="RMDcomplain">
        SELECT
        <include refid="columns"/>
        FROM d_complain
    </select>

    <select id="queryByCondition" resultMap="RMDcomplain">
        SELECT
        <include refid="columns"/>
        FROM d_complain

        <where>
            <if test="@Ognl@isNotEmpty(id)">
                AND id = #{id}
            </if>
            <if test="@Ognl@isNotEmpty(orderId)">
                AND order_id = #{orderId}
            </if>
            <if test="@Ognl@isNotEmpty(memberId)">
                AND member_id = #{memberId}
            </if>
            <if test="@Ognl@isNotEmpty(reason)">
                AND reason = #{reason}
            </if>
            <if test="@Ognl@isNotEmpty(status)">
                AND status = #{status}
            </if>
            <if test="@Ognl@isNotEmpty(reply)">
                AND reply = #{reply}
            </if>
            <if test="@Ognl@isNotEmpty(handle)">
                AND handle = #{handle}
            </if>
            <if test="@Ognl@isNotEmpty(remark)">
                AND remark = #{remark}
            </if>
            <if test="@Ognl@isNotEmpty(createTimeBegin)">
                AND create_time >= #{createTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(createTimeEnd)">
                AND create_time &lt;= #{createTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeBegin)">
                AND update_time >= #{updateTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeEnd)">
                AND update_time &lt;= #{updateTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(updateBy)">
                AND update_by = #{updateBy}
            </if>
        </where>
    </select>
    
    <!--  在某些查询条件下分页查询 -->
    <select id="listWithPageAndCondition" resultMap="RMDcomplainDorder">
		select a.id, a.create_time, a.status, b.order_id, b.goods_name, b.member_name, b.store_name, b.verify_consumption_time
		from d_complain a inner join d_order b 
		on a.order_id = b.order_id
		 <where>
			<if test="status != null and status != ''">and a.status = #{status}</if>
			<if test="storeName != null and storeName != ''">and b.store_name like CONCAT('%', #{storeName}, '%') </if>
			<if test="memberName != null and memberName != ''">and b.member_name like CONCAT('%', #{memberName}, '%')</if>
			<if test="orderSn != null and orderSn != ''">and b.order_sn like CONCAT('%', #{orderSn}, '%')</if>
			<if test="goodsName != null and goodsName != ''">and b.goods_name like CONCAT('%', #{goodsName}, '%')</if>
			<if test="verifyConsumptionTime != null and verifyConsumptionTime != ''">
				<if test="begin != null and begin != ''">and b.verify_consumption_time <![CDATA[>=]]> #{begin}</if>
				<if test="end != null and end != ''">and b.verify_consumption_time <![CDATA[<=]]> #{end}</if>
			</if>
			<if test="createTime != null and createTime != ''">
				<if test="begin != null and begin != ''">and a.create_time <![CDATA[>=]]> #{begin}</if>
				<if test="end != null and end != ''">and a.create_time <![CDATA[<=]]> #{end}</if>
			</if>
		</where> 
		<if test="pageInfo != null">
		limit #{pageInfo.begin}, #{pageInfo.end}
		</if>
	</select>
	
    <select id="blistWithPageAndCondition" resultType="java.util.HashMap">
		select a.id, a.create_time, a.status, a.reason, a.reply, b.order_id, b.goods_name, b.member_name, b.m_mobile, b.store_name, b.verify_consumption_time
		from d_complain a inner join (select order_id,goods_name,store_id,order_sn,c.member_name,store_name,verify_consumption_time,d.member_mobile as m_mobile from d_order c,d_member d where c.member_id = d.member_id) b 
		on a.order_id = b.order_id 
		 <where>
			<if test="status != null and status != ''">and a.status = #{status}</if>
			<if test="storeName != null and storeName != ''">and b.store_name like CONCAT('%', #{storeName}, '%') </if>
			<if test="storeId != null and storeId != ''">and b.store_id = #{storeId}</if>
			<if test="memberName != null and memberName != ''">and b.member_name like CONCAT('%', #{memberName}, '%')</if>
			<if test="orderSn != null and orderSn != ''">and b.order_sn like CONCAT('%', #{orderSn}, '%')</if>
			<if test="goodsName != null and goodsName != ''">and b.goods_name like CONCAT('%', #{goodsName}, '%')</if>
			<if test="verifyConsumptionTime != null and verifyConsumptionTime != ''">
				<if test="begin != null and begin != ''">and b.verify_consumption_time <![CDATA[>=]]> #{begin}</if>
				<if test="end != null and end != ''">and b.verify_consumption_time <![CDATA[<=]]> #{end}</if>
			</if>
			<if test="createTime != null and createTime != ''">
				<if test="begin != null and begin != ''">and a.create_time <![CDATA[>=]]> #{begin}</if>
				<if test="end != null and end != ''">and a.create_time <![CDATA[<=]]> #{end}</if>
			</if>
		</where> 
		<if test="pageInfo != null">
		limit #{pageInfo.begin}, #{pageInfo.end}
		</if>
	</select>
	
	<!--  在某些查询条件下数据的总条数 -->
	<select id="countWithCondition" resultType="int">
		select count(*) 
		from d_complain a inner join d_order b 
		on a.order_id = b.order_id
		 <where>
			<if test="status != null and status != ''">and a.status = #{status}</if>
			<if test="storeName != null and storeName != ''">and b.store_name like CONCAT('%', #{storeName}, '%') </if>
			<if test="storeId != null and storeId != ''">and b.store_id = #{storeId}</if>
			<if test="memberName != null and memberName != ''">and b.member_name like CONCAT('%', #{memberName}, '%')</if>
			<if test="orderSn != null and orderSn != ''">and b.order_sn like CONCAT('%', #{orderSn}, '%')</if>
			<if test="goodsName != null and goodsName != ''">and b.goods_name like CONCAT('%', #{goodsName}, '%')</if>
			<if test="verifyConsumptionTime != null and verifyConsumptionTime != ''">
				<if test="begin != null and begin != ''">and b.verify_consumption_time <![CDATA[>=]]> #{begin}</if>
				<if test="end != null and end != ''">and b.verify_consumption_time <![CDATA[<=]]> #{end}</if>
			</if>
			<if test="createTime != null and createTime != ''">
				<if test="begin != null and begin != ''">and a.create_time <![CDATA[>=]]> #{begin}</if>
				<if test="end != null and end != ''">and a.create_time <![CDATA[<=]]> #{end}</if>
			</if>
		</where> 
	</select>

	<select id="bcountWithCondition" resultType="int">
		select count(*) 
		from d_complain a inner join d_order b 
		on a.order_id = b.order_id
		 <where>
			<if test="status != null and status != ''">and a.status = #{status}</if>
			<if test="storeName != null and storeName != ''">and b.store_name like CONCAT('%', #{storeName}, '%') </if>
			<if test="memberName != null and memberName != ''">and b.member_name like CONCAT('%', #{memberName}, '%')</if>
			<if test="orderSn != null and orderSn != ''">and b.order_sn like CONCAT('%', #{orderSn}, '%')</if>
			<if test="goodsName != null and goodsName != ''">and b.goods_name like CONCAT('%', #{goodsName}, '%')</if>
			<if test="verifyConsumptionTime != null and verifyConsumptionTime != ''">
				<if test="begin != null and begin != ''">and b.verify_consumption_time <![CDATA[>=]]> #{begin}</if>
				<if test="end != null and end != ''">and b.verify_consumption_time <![CDATA[<=]]> #{end}</if>
			</if>
			<if test="createTime != null and createTime != ''">
				<if test="begin != null and begin != ''">and a.create_time <![CDATA[>=]]> #{begin}</if>
				<if test="end != null and end != ''">and a.create_time <![CDATA[<=]]> #{end}</if>
			</if>
		</where> 
	</select>
	
	<!-- B端统计新投诉 -->
	<select id="countUnhandleComplain" resultType="java.lang.Integer">
		SELECT 
		COUNT(*)
		FROM
		d_complain c,
		d_order o
		WHERE
		c.order_id = o.order_id
		<if test="storeId != null">AND o.store_id = #{storeId}</if> 
		<if test="status != null">AND c.`status` = #{status}</if> 
	</select>
</mapper>

